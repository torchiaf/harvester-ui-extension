"use strict";(("undefined"!==typeof self?self:this)["webpackChunkharvester_1_0_1"]=("undefined"!==typeof self?self:this)["webpackChunkharvester_1_0_1"]||[]).push([[565],{54823:function(e,t,s){s.d(t,{A:function(){return u}});var a=s(9274);const r={key:0};function i(e,t,s,i,n,o){const c=(0,a.resolveComponent)("BadgeState");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[s.arbitrary?((0,a.openBlock)(),(0,a.createElementBlock)("div",r,[s.value?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,color:n.stateBackground,label:n.stateDisplay},null,8,["color","label"])):(0,a.createCommentVNode)("",!0)])):((0,a.openBlock)(),(0,a.createBlock)(c,{key:1,value:s.row},null,8,["value"]))])}var n=s(61899),o=s(3952),c={components:{BadgeState:n.j},props:{value:{type:String,default:""},row:{type:Object,required:!0},col:{type:Object,default:()=>{}},arbitrary:{type:Boolean,default:!1}},data(){return{stateDisplay:"",stateBackground:""}},watch:{value:{handler(){if(this.arbitrary){const e=(0,o.uU)(this.value);this.stateDisplay=(0,o.ch)(this.value),this.stateBackground=e.replace("text-","bg-")}},immediate:!0}}},l=s(47433);const d=(0,l.A)(c,[["render",i]]);var u=d},73975:function(e,t,s){s.d(t,{v6:function(){return p},wM:function(){return S}});var a=s(96261),r=s(20246),i=s.n(r),n=s(46343),o=s.n(n),c=s(68440),l=s(21835),d=s(2602),u=s(32766),m=s(66490),h=s(48249);const p={package_update:!0,packages:["qemu-guest-agent"],runcmd:[["systemctl","enable","--now","qemu-guest-agent.service"]]},g={default:"qemu-guest-agent.service"},S=[{bus:"usb",name:"tablet",type:"tablet"}],f={EXISTING_ALL:"EXISTING_ALL",EXISTING_ONLY_ANNOTATION:"EXISTING_ANNOTATION",EXISTING_ONLY_CLOUD:"EXISTING_CLOUD"};t.Ay={methods:{hasCloudConfigComment(e){const t=e?a.Ay.parseDocument(e):a.Ay.parseDocument({}),s=t?.contents?.items||[];let r=!1;return("cloud-config"===t?.comment||t?.comment?.includes("cloud-config\n"))&&(r=!0),("cloud-config"===t?.commentBefore||t?.commentBefore?.includes("cloud-config\n"))&&(r=!0),s.map((e=>{const t=e.key;("cloud-config"===t?.commentBefore||t?.commentBefore?.includes("cloud-config\n"))&&(r=!0)})),r},getSSHValue(e){const t=this.$store.getters["currentProduct"].inStore,s=this.$store.getters[`${t}/all`](u.rk.SSH)||[];return s.find((t=>t.id===e))?.spec?.publicKey||void 0},getOsType(e){return e.metadata?.labels?.[d.r.OS]},getMatchQGA(e){const t=(0,c.o8)(p);let s=!1;return h.OS.forEach((t=>{t.match&&(s=t.match.find((t=>t===e)))})),t.runcmd[0][3]=s?g[e]:g["default"],t},getSimilarRuncmd(e){const t=(0,c.o8)(p);return t.runcmd[0][3]="openSUSE"===e?g["default"]:g["suse"],t.runcmd[0]},hasInstallAgent(e,t,s){let a={};const r=this.getMatchQGA(t);try{a=i().load(e)||{}}catch(n){return new Error("Function(hasInstallAgent) error"),s}return a?.packages?.includes("qemu-guest-agent")&&!!a?.runcmd?.find((e=>Array.isArray(e)&&e.join("-")===r.runcmd[0].join("-")))},isInstallUSBTablet(e){const t=e?.template?.spec?.domain?.devices?.inputs;return!!Array.isArray(t)&&!!t.find((e=>o()(e,S[0])))},isEfiEnabled(e){return!!e?.template?.spec?.domain?.firmware?.bootloader?.efi},isTpmEnabled(e){return!!e?.template?.spec?.domain?.devices?.tpm},isSecureBoot(e){return!!e?.template?.spec?.domain?.firmware?.bootloader?.efi?.secureBoot},isCpuPinning(e){return!!e?.template?.spec?.domain?.cpu?.dedicatedCpuPlacement},getCloudInitNoCloud(e){const t=this.getSecret(e);let s=t?.decodedData?.userdata,a=t?.decodedData?.networkdata;const r=e?.template?.spec?.volumes?.find((e=>"cloudinitdisk"===e.name))?.cloudInitNoCloud||{};return r?.userData&&(s=r.userData,this.saveUserDataAsClearText=!0),r?.networkData&&(a=r.networkData,this.saveNetworkDataAsClearText=!0),{userData:s,networkData:a}},getSecret(e){const t=e?.template?.spec?.volumes?.find((e=>"cloudinitdisk"===e.name))?.cloudInitNoCloud||{},s=this.$store.getters["currentProduct"].inStore,a=this.$store.getters[`${s}/all`](l.bB)||[],r=t?.secretRef?.name||t?.networkDataSecretRef?.name,i=a.find((e=>e.metadata.name===r));return i},getAccessCredentials(e){const t=this.$store.getters["currentProduct"].inStore,s=this.$store.getters[`${t}/all`](l.bB)||[],a=e?.template?.spec?.accessCredentials||[],r=JSON.parse(e.template.metadata?.annotations?.[d.r.DYNAMIC_SSHKEYS_NAMES]||"[]");return a.map((e=>{const t=e.userPassword?"userPassword":"sshPublicKey",a=e[t]?.source?.secret?.secretName,i=s.find((e=>e.metadata.name===a)),n={source:t,username:"",newPassword:"",users:[],sshkeys:[],secretName:a,secretRef:i};if(i)if("userPassword"===t){const e=Object.keys(i?.data)[0],t=i.decodedData[e];n.username=e,n.newPassword=t}else{const s=e[t].propagationMethod.qemuGuestAgent.users,i=r?.[a];n.users=s,n.sshkeys=i}else n.secretRef=void 0;return n}))},getRootImageId(e){const t=(0,m.v)(e);return t?.[0]?.metadata?.annotations?.[d.r.IMAGE_ID]||""},getSSHFromAnnotation(e){const t=e?.template?.metadata?.annotations?.[d.r.SSH_NAMES]||"[]";return JSON.parse(t)},convertToJson(e=""){let t={};try{t=i().load(e)}catch(s){new Error("Function(convertToJson) error")}return t},getSSHFromUserData(e){return this.convertToJson(e)?.ssh_authorized_keys||[]},compareSSHValue(e="",t=""){const s=/(\r\n\t|\n|\r\t)|(\s*)/gm;return e.replace(s,"")===t.replace(s,"")},mergeAllSSHs(e){const t=this.getSSHFromAnnotation(e),{userScript:s}=this.getCloudInitNoCloud(e);if(!t?.length<0&&!s)return[];let a=[];const r=this.$store.getters["currentProduct"].inStore,i=this.$store.getters[`${r}/all`](u.rk.SSH)||[];a=(t||[]).map((e=>{const t=i.find((t=>t.id===e));return t?{id:t.id,data:t,type:f.EXISTING_ALL}:{id:e,data:e,type:f.EXISTING_ONLY_ANNOTATION}}));const n=this.getSSHFromUserData(s);return n.map((e=>{const t=i.find((t=>this.compareSSHValue(e,t.spec?.publicKey)));t&&!a.find((e=>e.id===t.id))?a.push({id:t.id,data:t,type:f.EXISTING_ALL}):t||a.push({id:"Unknown",data:e,type:f.EXISTING_ONLY_CLOUD})})),a}}}},48249:function(e,t,s){s.d(t,{OS:function(){return O},PO:function(){return D}});var a=s(96261),r=s(20246),i=s.n(r),n=s(46343),o=s.n(n),c=s(3514),l=s.n(c),d=s(88088),u=s.n(d),m=s(29125),h=s(68440),p=s(41951),g=s(71160),S=s(5230),f=s(4390),y=s(43305),v=s(21835),A=s(74656),k=s(2602),N=s(35690),E=s(66905),T=s(50889),I=s(32766),M=s(66490),C=s(73975),b=s(10257);const w="longhorn-system/v2-data-engine",D="management Network",O=[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"},{label:"SUSE Linux Enterprise",value:"SLEs"},{label:"Debian",value:"debian"},{label:"Fedora",value:"fedora"},{label:"Gentoo",value:"gentoo"},{label:"Oracle",value:"oracle"},{label:"Red Hat",match:["redhat","rhel"],value:"redhat"},{label:"openSUSE",value:"openSUSE"},{label:"Ubuntu",value:"ubuntu"},{label:"Other Linux",match:["centos"],value:"otherLinux"}],$="cd-rom",_="disk";t.Ay={mixins:[C.Ay],props:{value:{type:Object,required:!0},resourceType:{type:String,default:""}},async fetch(){const e=this.$store.getters["currentProduct"].inStore,t={pvs:this.$store.dispatch(`${e}/findAll`,{type:v.PV}),pvcs:this.$store.dispatch(`${e}/findAll`,{type:v.YH}),storageClasses:this.$store.dispatch(`${e}/findAll`,{type:v.fJ}),sshs:this.$store.dispatch(`${e}/findAll`,{type:I.rk.SSH}),settings:this.$store.dispatch(`${e}/findAll`,{type:I.rk.SETTING}),images:this.$store.dispatch(`${e}/findAll`,{type:I.rk.IMAGE}),versions:this.$store.dispatch(`${e}/findAll`,{type:I.rk.VM_VERSION}),templates:this.$store.dispatch(`${e}/findAll`,{type:I.rk.VM_TEMPLATE}),networkAttachment:this.$store.dispatch(`${e}/findAll`,{type:v.XG}),vmis:this.$store.dispatch(`${e}/findAll`,{type:I.rk.VMI}),vmims:this.$store.dispatch(`${e}/findAll`,{type:I.rk.VMIM}),vms:this.$store.dispatch(`${e}/findAll`,{type:I.rk.VM}),secrets:this.$store.dispatch(`${e}/findAll`,{type:v.bB}),addons:this.$store.dispatch(`${e}/findAll`,{type:I.rk.ADD_ONS}),longhornV2Engine:this.$store.dispatch(`${e}/find`,{type:v.oe.SETTINGS,id:w})};this.$store.getters[`${e}/schemaFor`](v.NW)&&(t.nodes=this.$store.dispatch(`${e}/findAll`,{type:v.NW})),this.$store.getters[`${e}/schemaFor`](I.rk.CLUSTER_NETWORK)&&(t.clusterNetworks=this.$store.dispatch(`${e}/findAll`,{type:I.rk.CLUSTER_NETWORK})),this.$store.getters[`${e}/schemaFor`](I.rk.VLAN_CONFIG)&&(t.clusterNetworks=this.$store.dispatch(`${e}/findAll`,{type:I.rk.VLAN_CONFIG})),this.$store.getters[`${e}/schemaFor`](v.oe.VOLUMES)&&(t.longhornVolumes=this.$store.dispatch(`${e}/findAll`,{type:v.oe.VOLUMES}));const s=await(0,p.kR)(t),a=!!this.$store.getters[`${e}/schemaFor`](I.rk.PCI_DEVICE),r=!!this.$store.getters[`${e}/schemaFor`](I.rk.SR_IOVGPU_DEVICE),i=s.addons.reduce(((e,t)=>({...e,[t.name]:t.spec?.enabled})),{});this.enabledPCI=a&&i[E.Jo.PCI_DEVICE_CONTROLLER],this.enabledSriovgpu=r&&i[E.Jo.PCI_DEVICE_CONTROLLER]&&i[E.Jo.NVIDIA_DRIVER_TOOLKIT_CONTROLLER]},data(){const e=this.realMode===y.dT;return{OS:O,isClone:e,spec:null,osType:"linux",sshKey:[],maintenanceStrategies:E.hg,maintenanceStrategy:"Migrate",runStrategies:E.vo,runStrategy:"RerunOnFailure",installAgent:!0,hasCreateVolumes:[],installUSBTablet:!0,networkScript:"",userScript:"",imageId:"",diskRows:[],networkRows:[],machineType:"",secretName:"",secretRef:null,showAdvanced:!1,deleteAgent:!0,memory:null,cpu:"",reservedMemory:null,accessCredentials:[],efiEnabled:!1,tpmEnabled:!1,secureBoot:!1,userDataTemplateId:"",saveUserDataAsClearText:!1,saveNetworkDataAsClearText:!1,enabledPCI:!1,enabledSriovgpu:!1,immutableMode:this.realMode===y.YQ?y.YQ:y.nW,terminationGracePeriodSeconds:"",cpuPinning:!1}},computed:{inStore(){return this.$store.getters["currentProduct"].inStore},images(){return this.$store.getters[`${this.inStore}/all`](I.rk.IMAGE)},versions(){return this.$store.getters[`${this.inStore}/all`](I.rk.VM_VERSION)},templates(){return this.$store.getters[`${this.inStore}/all`](I.rk.VM_TEMPLATE)},pvcs(){return this.$store.getters[`${this.inStore}/all`](v.YH)},secrets(){return this.$store.getters[`${this.inStore}/all`](v.bB)},filteredNamespaces(){return this.$store.getters["harvester/all"](v.CU).filter((e=>!e.isSystem))},nodes(){return this.$store.getters["harvester/all"](v.NW)},nodesIdOptions(){const e=this.$store.getters[`${this.inStore}/all`](v.NW),t=this.networkRows.map((e=>e.networkName)),s=this.$store.getters[`${this.inStore}/all`](v.XG),a=t.map((e=>s.find((t=>t.id===e)))).filter((e=>e?.id)),r=(0,N.sb)(a.map((e=>e.clusterNetworkResource?.id)));return e.filter((e=>!e.isUnSchedulable)).map((e=>{const t=[];let s=!0;return r.length>0&&r.map((e=>{t.push(`network.harvesterhci.io/${e}`)})),t.map((t=>{"true"!==e.metadata?.labels?.[t]&&(s=!1)})),{label:s?e.nameDisplay:`${e.nameDisplay} (${this.t("harvester.virtualMachine.scheduling.networkNotSupport")})`,value:e.id,disabled:!s}}))},defaultStorageClass(){const e=this.$store.getters[`${this.inStore}/all`](v.fJ).find((e=>e.isDefault));return e},storageClassSetting(){try{const e=this.$store.getters[`${this.inStore}/all`](I.rk.SETTING).find((e=>e.id===T.EP.DEFAULT_STORAGE_CLASS))?.value;return JSON.parse(e)}catch(e){return{}}},customVolumeMode(){return this.storageClassSetting.volumeMode||"Block"},customAccessMode(){return this.storageClassSetting.accessModes||"ReadWriteMany"},isWindows(){return"windows"===this.osType},needNewSecret(){return this.resourceType===I.rk.VM_VERSION||this.isCreate},defaultTerminationSetting(){const e=this.$store.getters[`${this.inStore}/all`](I.rk.SETTING).find((e=>e.id===T.EP.VM_TERMINATION_PERIOD))||{};return Number(e?.value||e?.default)},affinityLabels(){return{namespaceInputLabel:this.t("harvesterManager.affinity.namespaces.label"),namespaceSelectionLabels:[this.t("harvesterManager.affinity.thisPodNamespace"),this.t("workload.scheduling.affinity.allNamespaces"),this.t("harvesterManager.affinity.matchExpressions.inNamespaces")],addLabel:this.t("harvesterManager.affinity.addLabel"),topologyKeyPlaceholder:this.t("harvesterManager.affinity.topologyKey.placeholder")}}},async created(){await this.$store.dispatch(`${this.inStore}/findAll`,{type:v.bB}),this.getInitConfig({value:this.value,init:this.isCreate})},methods:{getInitConfig(e){const{value:t,existUserData:s,fromTemplate:a=!1,init:r=!1}=e,i=this.resourceType===I.rk.VM?t:this.resourceType===I.rk.BACKUP?this.value.status?.source:t.spec.vm,n=this.resourceType===I.rk.BACKUP?this.value.status?.volumeBackups:null,o=i?.spec;if(!o)return;const c=o.template.spec.domain.resources;(!c?.limits||c?.limits&&!c?.limits?.memory&&null!==c?.limits?.memory)&&(o.template.spec.domain.resources={...o.template.spec.domain.resources,limits:{...o.template.spec.domain.resources.limits,memory:o.template.spec.domain.resources.requests.memory}}),i.metadata.labels||(i.metadata.labels={});const l=i.metadata.labels?.[k.r.VM_MAINTENANCE_MODE_STRATEGY]||"Migrate",d=o.runStrategy||"RerunOnFailure",u=t.machineType,m=o.template.spec.domain?.cpu?.cores,h=o.template.spec.domain.resources.limits.memory,p=i.metadata?.annotations?.[k.r.VM_RESERVED_MEMORY],g=o.template.spec?.terminationGracePeriodSeconds||this.defaultTerminationSetting,f=this.getSSHFromAnnotation(o)||[],y=this.getRootImageId(i)||"",v=this.getDiskRows(i,n),A=this.getNetworkRows(i,{fromTemplate:a,init:r}),N=this.getHasCreatedVolumes(o)||[];let{userData:E,networkData:T}=this.getCloudInitNoCloud(o);if(this.resourceType===I.rk.BACKUP){const e=this.value.status?.secretBackups;if(e){const t=e[0]?.data?.networkdata||"",s=e[0]?.data?.userdata||"";E=(0,S.u)(s),T=(0,S.u)(t)}}const M=this.getOsType(i)||"linux";E=!this.isCreate||s||this.isClone?E:this.getInitUserData({osType:M});const C=this.isInstallUSBTablet(o),b=this.hasInstallAgent(E,M,!0),w=this.isEfiEnabled(o),D=this.isTpmEnabled(o),O=this.isSecureBoot(o),$=this.isCpuPinning(o),_=this.getSecret(o),R=this.getAccessCredentials(o);Object.prototype.hasOwnProperty.call(o,"running")&&(delete o.running,o.runStrategy="RerunOnFailure"),this["spec"]=o,this["maintenanceStrategy"]=l,this["runStrategy"]=d,this["secretRef"]=_,this["accessCredentials"]=R,this["userScript"]=E,this["networkScript"]=T,this["sshKey"]=f,this["osType"]=M,this["installAgent"]=b,this["cpu"]=m,this["memory"]=h,this["reservedMemory"]=p,this["machineType"]=u,this["terminationGracePeriodSeconds"]=g,this["installUSBTablet"]=C,this["efiEnabled"]=w,this["tpmEnabled"]=D,this["secureBoot"]=O,this["cpuPinning"]=$,this["hasCreateVolumes"]=N,this["networkRows"]=A,this["imageId"]=y,this["diskRows"]=v,this.refreshYamlEditor()},getDiskRows(e,t){const s=e.metadata.namespace,a=e.spec.template.spec.volumes||[],r=e.spec.template.spec.domain.devices.disks||[],i=(0,M.v)(e);let n=[];if(0===r.length){let e="virtio",s=_,a="10Gi";const r=this.images.find((e=>this.imageId===e.id)),i=/iso$/i.test(r?.imageSuffix),o=Math.max(r?.status?.size,r?.status?.virtualSize),c=r?.isEncrypted||!1,l=t?.find((e=>"disk-0"===e.volumeName))||null;if(i&&(e="sata",s=$),o){let e=Math.ceil(o/1024/1024/1024);i||(e=Math.max(e,10)),a=`${e}Gi`}n.push({id:(0,g.vx)(5),source:E.xO.IMAGE,name:"disk-0",accessMode:"ReadWriteMany",bus:e,volumeName:"",size:a,type:s,storageClassName:"",image:this.imageId,volumeMode:"Block",isEncrypted:c,volumeBackups:l})}else n=r.map(((e,r)=>{const n=a.find((t=>t.name===e.name));let o="",c="",l="",d="",u="",m="",h="",p="",S="",y=!1,A=null;const N=e?.cdrom?$:e?.disk?_:"";if(n?.containerDisk&&(l=E.xO.CONTAINER,u=n.containerDisk.image),n.persistentVolumeClaim&&n.persistentVolumeClaim?.claimName){m=n.persistentVolumeClaim.claimName;const e=i.find((e=>e.metadata.name===m));if(d=m,e){void 0!==e.metadata?.annotations?.[k.r.IMAGE_ID]?(c=e.metadata?.annotations?.[k.r.IMAGE_ID],l=E.xO.IMAGE):l=E.xO.NEW;const t=e?.spec||{};p=t?.volumeMode,h=t?.accessModes?.[0],o=t?.resources?.requests?.storage||"10Gi",S=t?.storageClassName,A=t?.dataSource}else{const e=this.$store.getters["harvester/all"](v.YH),t=e.find((e=>e.id===`${s}/${n?.persistentVolumeClaim?.claimName}`));l=E.xO.ATTACH_VOLUME,h=t?.spec?.accessModes?.[0]||"ReadWriteMany",o=t?.spec?.resources?.requests?.storage||"10Gi",S=t?.spec?.storageClassName,p=t?.spec?.volumeMode||"Block",m=t?.metadata?.name||""}y=n.persistentVolumeClaim.hotpluggable||!1}const T=e?.disk?.bus||e?.cdrom?.bus,I=e?.bootOrder?e?.bootOrder:r,M=(0,f.ao)(o),C=(0,f.Mo)(M,{increment:1024,addSuffix:!1,maxExponent:3,minExponent:3}),b=this.pvcs.find((e=>e.id===`${this.value.metadata.namespace}/${m}`)),w=b?.relatedPV?.metadata?.annotations?.[k.r.VOLUME_ERROR],D=b?.isEncrypted||!1,O=t?.find((t=>t.volumeName===e.name))||null;return{id:(0,g.vx)(5),bootOrder:I,source:l,name:e.name,realName:d,bus:T,volumeName:m,container:u,accessMode:h,size:`${C}Gi`,volumeMode:p||this.customVolumeMode,image:c,type:N,storageClassName:S,hotpluggable:y,volumeStatus:w,dataSource:A,namespace:s,isEncrypted:D,volumeBackups:O}}));return n=(0,m.Ul)(n,"bootOrder"),n.filter((e=>"cloudinitdisk"!==e.name))},getNetworkRows(e,t){const{fromTemplate:s=!1,init:a=!1}=t,r=e.spec.template.spec.networks||[],i=e.spec.template.spec.domain.devices.interfaces||[],n=i.map(((e,t)=>{const i=r.find((t=>e.name===t.name)),n=e.sriov?"sriov":e.bridge?"bridge":"masquerade",o=!!i.pod;return{...e,index:t,type:n,isPod:o,newCreateId:!(!s&&!a)&&(0,g.vx)(10),model:e.model,networkName:o?D:i?.multus?.networkName}}));return n},parseVM(){this.userData=this.getUserData({osType:this.osType,installAgent:this.installAgent}),this.parseOther(),this.parseAccessCredentials(),this.parseNetworkRows(this.networkRows),this.parseDiskRows(this.diskRows)},parseOther(){this.spec.template.spec.domain.machine?this.spec.template.spec.domain.machine["type"]=this.machineType:this.spec.template.spec.domain["machine"]={type:this.machineType},this.spec.template.spec.domain.cpu.cores=this.cpu,this.spec.template.spec.domain.resources.limits.cpu=this.cpu?this.cpu.toString():this.cpu,this.spec.template.spec.domain.resources.limits.memory=this.memory,this.spec.template.spec.terminationGracePeriodSeconds=this.terminationGracePeriodSeconds;const e=this.resourceType===I.rk.VM?this.value:this.value.spec.vm;this.reservedMemory?e.metadata.annotations[k.r.VM_RESERVED_MEMORY]=this.reservedMemory:delete e.metadata.annotations[k.r.VM_RESERVED_MEMORY],"Migrate"===this.maintenanceStrategy?delete e.metadata.labels[k.r.VM_MAINTENANCE_MODE_STRATEGY]:e.metadata.labels[k.r.VM_MAINTENANCE_MODE_STRATEGY]=this.maintenanceStrategy},parseDiskRows(e){const t=[],s=[],a=[],r=[];if(e.forEach(((e,i)=>{const n=this.value.metadata?.name||"";let o="";o=e.source===E.xO.ATTACH_VOLUME?e.volumeName:this.isClone||!this.hasCreateVolumes.includes(e.realName)?`${n}-${e.name}-${(0,g.vx)(5).toLowerCase()}`:e.realName;const c=this.parseDisk(e,i),l=this.parseVolume(e,o),d=this.parseVolumeClaimTemplate(e,o);t.push(c),s.push(l),a.push(o),e.source!==E.xO.CONTAINER&&r.push(d)})),this.secretName&&!this.needNewSecret||(this.secretName=this.generateSecretName(this.secretNamePrefix)),!t.find((e=>"cloudinitdisk"===e.name))&&(this.userData||this.networkData)&&!this.isWindows){t.push({name:"cloudinitdisk",disk:{bus:"virtio"}});const e=this.getUserData({osType:this.osType,installAgent:this.installAgent}),a={name:"cloudinitdisk",cloudInitNoCloud:{}};this.saveUserDataAsClearText?a.cloudInitNoCloud.userData=e:a.cloudInitNoCloud.secretRef={name:this.secretName},this.saveNetworkDataAsClearText?a.cloudInitNoCloud.networkData=this.networkScript:a.cloudInitNoCloud.networkDataSecretRef={name:this.secretName},s.push(a)}let i={...this.spec,runStrategy:this.runStrategy,template:{...this.spec.template,metadata:{...this.spec?.template?.metadata,annotations:{...this.spec?.template?.metadata?.annotations,[k.r.SSH_NAMES]:JSON.stringify(this.sshKey)},labels:{...this.spec?.template?.metadata?.labels,[k.r.VM_NAME]:this.value?.metadata?.name}},spec:{...this.spec.template?.spec,domain:{...this.spec.template?.spec?.domain,devices:{...this.spec.template?.spec?.domain?.devices,disks:t}},volumes:s}}};0===s.length&&delete i.template.spec.volumes,this.resourceType===I.rk.VM?(this.isSingle||(i=this.multiVMScheduler(i)),this.value.metadata["annotations"]={...this.value.metadata.annotations,[k.r.VOLUME_CLAIM_TEMPLATE]:JSON.stringify(r),[k.r.NETWORK_IPS]:JSON.stringify(this.value.networkIps)},this.value.metadata["labels"]={...this.value.metadata.labels,[k.r.CREATOR]:"harvester",[k.r.OS]:this.osType},this.value["spec"]=i,this["spec"]=i):this.resourceType===I.rk.VM_VERSION&&(this.value.spec.vm["spec"]=i,this.value.spec.vm.metadata["annotations"]={...this.value.spec.vm.metadata.annotations,[k.r.VOLUME_CLAIM_TEMPLATE]:JSON.stringify(r)},this.value.spec.vm.metadata["labels"]={...this.value.spec.vm.metadata.labels,[k.r.OS]:this.osType},this["spec"]=i)},removeTrailingHyphen(e){while(e.endsWith("-"))e=e.slice(0,-1);return e},multiVMScheduler(e){const t=this.removeTrailingHyphen(this.namePrefix);e.template.metadata.labels[k.r.VM_NAME_PREFIX]=t;const s={weight:1,podAffinityTerm:{topologyKey:A.yA,labelSelector:{matchLabels:{[k.r.VM_NAME_PREFIX]:t}}}};return{...e,template:{...e.template,spec:{...e.template.spec,affinity:{...e.template.spec.affinity,podAntiAffinity:{...e.template.spec?.affinity?.podAntiAffinity,preferredDuringSchedulingIgnoredDuringExecution:[...e.template.spec?.affinity?.podAntiAffinity?.preferredDuringSchedulingIgnoredDuringExecution||[],s]}}}}}},parseNetworkRows(e){const t=[],s=[];e.forEach((e=>{const a=this.parseNetwork(e),r=this.parseInterface(e);t.push(a),s.push(r)}));const a={...this.spec.template.spec,domain:{...this.spec.template.spec.domain,devices:{...this.spec.template.spec.domain.devices,interfaces:s}},networks:t};this.spec.template["spec"]=a},parseAccessCredentials(){const e=[],t={},s=JSON.parse(this.spec?.template?.metadata?.annotations?.[k.r.DYNAMIC_SSHKEYS_USERS]||"[]");for(const a of this.accessCredentials)this.needNewSecret&&(a.secretName=this.generateSecretName(this.secretNamePrefix)),a.source===E.cI.RESET_PWD&&(s.push(a.username),e.push({userPassword:{source:{secret:{secretName:a.secretName}},propagationMethod:{qemuGuestAgent:{}}}})),a.source===E.cI.INJECT_SSH&&(s.push(...a.users),t[a.secretName]=a.sshkeys,e.push({sshPublicKey:{source:{secret:{secretName:a.secretName}},propagationMethod:{qemuGuestAgent:{users:a.users}}}}));0===e.length&&this.spec.template.spec.accessCredentials?delete this.spec.template.spec.accessCredentials:this.spec.template.spec.accessCredentials=e,0!==s.length&&(this.spec.template.metadata.annotations[k.r.DYNAMIC_SSHKEYS_USERS]=JSON.stringify(Array.from(new Set(s))),this.spec.template.metadata.annotations[k.r.DYNAMIC_SSHKEYS_NAMES]=JSON.stringify(t))},getMaintenanceStrategyOptionLabel(e){return this.t(`harvester.virtualMachine.maintenanceStrategy.options.${e.label||e}`)},getInitUserData(e){const t=this.getMatchQGA(e.osType),s=i().dump(t);return`#cloud-config\n${s}`},getUserData(e){try{let t=this.userScript?a.Ay.parseDocument(this.userScript):a.Ay.parseDocument({});const s=this.mergeSSHAuthorizedKeys(this.userScript);s.length>0?t.setIn(["ssh_authorized_keys"],s):a.Ay.isCollection(t.getIn("ssh_authorized_keys"))&&t.deleteIn(["ssh_authorized_keys"]),t=e.installAgent?this.mergeQGA({userDataDoc:t,...e}):this.deleteQGA({userDataDoc:t,...e});const r=t.toString();if("{}\n"===r)return;return r}catch(t){return b.error("Error: Unable to parse yaml document",t),this.userScript}},updateSSHKey(e){this["sshKey"]=e},updateCpuMemory(e,t){this["cpu"]=e,this["memory"]=t},parseDisk(e,t){const s={name:e.name};return e.type===_?s.disk={bus:e.bus}:e.type===$&&(s.cdrom={bus:e.bus}),s.bootOrder=t+1,s},parseVolume(e,t){const s={name:e.name};return e.source===E.xO.CONTAINER?s.containerDisk={image:e.container}:e.source!==E.xO.IMAGE&&e.source!==E.xO.NEW&&e.source!==E.xO.ATTACH_VOLUME||(s.persistentVolumeClaim={claimName:t},e.hotpluggable&&(s.persistentVolumeClaim.hotpluggable=!0)),s},parseVolumeClaimTemplate(e,t){!String(e.size).includes("Gi")&&e.size&&(e.size=`${e.size}Gi`);const s={metadata:{name:t},spec:{accessModes:[e.accessMode],resources:{requests:{storage:e.size}},volumeMode:e.volumeMode}};switch(e.dataSource&&(s.spec.dataSource=e.dataSource),e.source){case E.xO.ATTACH_VOLUME:s.spec.storageClassName=e.storageClassName;break;case E.xO.NEW:s.spec.storageClassName=e.storageClassName;break;case E.xO.IMAGE:{const t=this.images.find((t=>e.image===t.id));t?(s.spec.storageClassName=t.storageClassName,s.metadata.annotations={[k.r.IMAGE_ID]:t.id}):s.metadata.annotations={[k.r.IMAGE_ID]:""};break}}return s},getSSHListValue(e){return e.map((e=>this.getSSHValue(e))).filter((e=>void 0!==e))},parseInterface(e){const t={},s=e.type;return t[s]={},e.macAddress&&(t.macAddress=e.macAddress),t.model=e.model,t.name=e.name,t},parseNetwork(e){const t={name:e.name};return e.isPod?t.pod={}:t.multus={networkName:e.networkName},t},updateUserData(e){this.userScript=e},updateNetworkData(e){this.networkScript=e},mergeSSHAuthorizedKeys(e){try{const t=a.Ay.parseDocument(e).get("ssh_authorized_keys")?.toJSON()||[],s=this.getSSHListValue(this.sshKey);return t.length?[...new Set([...s,...t])]:s}catch(t){return[]}},deleteYamlDocProp(e,t){try{const s=e.getIn([])?.items[0],a=s?.key,r=!!a?.commentBefore?.includes("cloud-config"),i=a.source===t[t.length-1];a&&r&&i||e.deleteIn(t)}catch(s){}},mergeQGA(e){const{osType:t,userDataDoc:s}=e,r=this.getMatchQGA(t),i=s.toString(),n=a.Ay.parse(i);let o=n?.packages||[],c=n?.runcmd||[];if(s.setIn(["package_update"],!0),Array.isArray(o)?o.includes("qemu-guest-agent")||o.push("qemu-guest-agent"):o=C.v6.packages,Array.isArray(c)){let e=-1;const s=c.find((e=>Array.isArray(e)&&e.join("-")===r.runcmd[0].join("-"))),a=c.find(((s,a)=>!(!Array.isArray(s)||s.join("-")!==this.getSimilarRuncmd(t).join("-"))&&(e=a,!0)));a?c[e]=r.runcmd[0]:s||c.push(r.runcmd[0])}else c=r.runcmd;return o.length>0?s.setIn(["packages"],o):(s.setIn(["packages"],[]),this.deleteYamlDocProp(s,["packages"]),this.deleteYamlDocProp(s,["package_update"])),c.length>0?s.setIn(["runcmd"],c):this.deleteYamlDocProp(s,["runcmd"]),s},deleteQGA(e){const{osType:t,userDataDoc:s,deletePackage:r=!1}=e,i=this.$store.getters["harvester/byId"](v.K5,this.userDataTemplateId)?.data?.cloudInit||"",n=s.toString(),o=a.Ay.parse(n),c=o?.packages||[],l=o?.runcmd||[];if(Array.isArray(c)&&r){const e=this.convertToJson(i);for(let t=0;t<c.length;t++)"qemu-guest-agent"===c[t]&&(Array.isArray(e?.packages)&&e.packages.includes("qemu-guest-agent")||c.splice(t,1))}if(Array.isArray(l)){const e=this.getMatchQGA(t);for(let t=0;t<l.length;t++)Array.isArray(l[t])&&l[t].join("-")===e.runcmd[0].join("-")&&l.splice(t,1)}return c.length>0?s.setIn(["packages"],c):(s.setIn(["packages"],[]),this.deleteYamlDocProp(s,["packages"]),this.deleteYamlDocProp(s,["package_update"])),l.length>0?s.setIn(["runcmd"],l):this.deleteYamlDocProp(s,["runcmd"]),s},generateSecretName(e){return e?`${e}-${(0,g.vx)(5).toLowerCase()}`:void 0},getOwnerReferencesFromVM(e){const t=e.metadata.name,s=e.kind,a=this.resourceType===I.rk.VM?"kubevirt.io/v1":"harvesterhci.io/v1beta1",r=e?.metadata?.uid;return[{name:t,kind:s,uid:r,apiVersion:a}]},async saveSecret(e){if(!e?.spec||!this.secretName||this.isWindows)return!0;let t=this.getSecret(e.spec);!t&&this.isEdit&&this.secretRef&&(t=this.secretRef),t&&!this.needNewSecret||(t=await this.$store.dispatch("harvester/create",{metadata:{name:this.secretName,namespace:this.value.metadata.namespace,labels:{[k.r.CLOUD_INIT]:"harvester"},ownerReferences:this.getOwnerReferencesFromVM(e)},type:v.bB}));try{t&&(this.saveUserDataAsClearText&&this.saveNetworkDataAsClearText||(t.setData("userdata",this.userData||""),t.setData("networkdata",this.networkScript||""),await t.save()))}catch(s){return Promise.reject(s)}},async saveAccessCredentials(e){if(!e?.spec)return!0;const t=[];for(const a of this.accessCredentials){let s=a.secretRef;if(s&&!this.needNewSecret||(s=await this.$store.dispatch("harvester/create",{metadata:{name:a.secretName,namespace:e.metadata.namespace,labels:{[k.r.CLOUD_INIT]:"harvester"},ownerReferences:this.getOwnerReferencesFromVM(e)},type:v.bB})),a.source===E.cI.RESET_PWD&&s.setData(a.username,a.newPassword),a.source===E.cI.INJECT_SSH)for(const e of a.sshkeys){const t=(this.$store.getters["harvester/all"](I.rk.SSH)||[]).find((t=>t.id===e));s.setData(`${t.metadata.namespace}-${t.metadata.name}`,t.spec.publicKey)}t.push(s)}try{for(const e of t)await e.save()}catch(s){return Promise.reject(s)}},getAccessCredentialsValidation(){const e=[];for(let t=0;t<this.accessCredentials.length;t++){const s=this.accessCredentials[t],a=s.source;if(a===E.cI.RESET_PWD){if(!s.username){const t=this.t("harvester.virtualMachine.input.username"),s=this.t("validation.required",{key:t});e.push(s)}if(!s.newPassword){const t=this.t("harvester.virtualMachine.input.password"),s=this.t("validation.required",{key:t});e.push(s)}if(s.newPassword&&s.newPassword.length<6){const t=this.t("harvester.virtualMachine.input.password"),s=this.t("validation.number.min",{key:t,val:"6"});e.push(s)}}else{if(!s.users||0===s.users.length){const t=this.t("harvester.virtualMachine.input.username"),s=this.t("validation.required",{key:t});e.push(s)}if(!s.sshkeys||0===s.sshkeys.length){const t=this.t("harvester.virtualMachine.input.sshKeyValue"),s=this.t("validation.required",{key:t});e.push(s)}}if(e.length>0)break}return e},getHasCreatedVolumes(e){const t=[];return e.template.spec.volumes&&e.template.spec.volumes.forEach((e=>{e?.persistentVolumeClaim?.claimName&&t.push(e.persistentVolumeClaim.claimName)})),t},handlerUSBTablet(e){const t=this.isInstallUSBTablet(this.spec),s=this.spec.template.spec.domain.devices?.inputs||[];if(e&&!t)s.length>0?s.push(C.wM[0]):Object.assign(this.spec.template.spec.domain.devices,{inputs:[C.wM[0]]});else if(!e){const e=s.findIndex((e=>o()(e,C.wM[0])));t&&1===s.length?delete this.spec.template.spec.domain.devices["inputs"]:t&&(s.splice(e,1),this.spec.template.spec.domain.devices["inputs"]=s)}},setBootMethod(e={efi:!1,secureBoot:!1}){if(e.efi&&e.secureBoot)(0,h.hZ)(this.spec.template.spec.domain,"features.smm.enabled",!0),(0,h.hZ)(this.spec.template.spec.domain,"firmware.bootloader.efi.secureBoot",!0);else if(e.efi&&!e.secureBoot){try{delete this.spec.template.spec.domain.features.smm["enabled"];const e=0===Object.keys(this.spec.template.spec.domain.features.smm).length;e&&delete this.spec.template.spec.domain.features["smm"]}catch(t){}(0,h.hZ)(this.spec.template.spec.domain,"firmware.bootloader.efi.secureBoot",!1)}else delete this.spec.template.spec.domain["firmware"],delete this.spec.template.spec.domain.features["smm"]},setCpuPinning(e){e?(0,h.hZ)(this.spec.template.spec.domain.cpu,"dedicatedCpuPlacement",!0):delete this.spec.template.spec.domain.cpu["dedicatedCpuPlacement"]},setTPM(e){e?(0,h.hZ)(this.spec.template.spec.domain.devices,"tpm",{}):delete this.spec.template.spec.domain.devices["tpm"]},deleteSSHFromUserData(e=[]){const t=this.getSSHFromUserData(this.userScript);e.map((e=>{const s=t.findIndex((t=>t===this.getSSHValue(e)));s>=0&&t.splice(s,1)}));const s=this.convertToJson(this.userScript);s.ssh_authorized_keys=t,0===t.length&&delete s.ssh_authorized_keys,l()(s)?this["userScript"]=void 0:this["userScript"]=i().dump(s),this.refreshYamlEditor()},refreshYamlEditor(){this.$nextTick((()=>{this.$refs.yamlEditor?.updateValue()}))},toggleAdvanced(){this.showAdvanced=!this.showAdvanced},updateAgent(e){e||(this.deletePackage=!0)},updateDataTemplateId(e,t){if("user"===e){const e=this.installAgent;this.userDataTemplateId=t,this.$nextTick((()=>{e&&(this.installAgent=e)}))}},updateReserved(e={}){const{memory:t}=e;this["reservedMemory"]=t},updateTerminationGracePeriodSeconds(e){this["terminationGracePeriodSeconds"]=e}},watch:{diskRows:{handler(e,t){if(Array.isArray(e)){const s=e[0]?.image,a=this.images.find((e=>s===e.id)),r=a?.imageOSType,i=t[0]?.image;this.isCreate&&i===s&&s&&(this.osType=r)}}},secretRef:{handler(e){e&&this.resourceType!==I.rk.BACKUP&&(this.secretName=e?.metadata.name)},immediate:!0,deep:!0},isWindows(e){e&&(this["sshKey"]=[],this["userScript"]=void 0,this["installAgent"]=!1)},installUSBTablet(e){this.handlerUSBTablet(e)},efiEnabled(e){this.setBootMethod({efi:e,secureBoot:this.secureBoot})},secureBoot(e){this.setBootMethod({efi:this.efiEnabled,secureBoot:e})},cpuPinning(e){this.setCpuPinning(e)},tpmEnabled(e){this.setTPM(e)},installAgent:{handler(e){if(this.deleteAgent){let t=this.getUserData({installAgent:e,osType:this.osType,deletePackage:this.deletePackage});if(e){const e=this.hasCloudConfigComment(t);e||(t=`#cloud-config\n${t}`)}this["userScript"]=t,this.refreshYamlEditor()}this.deleteAgent=!0,this.deletePackage=!1}},osType(e){const t=this.getUserData({installAgent:this.installAgent,osType:e});this["userScript"]=t,this.refreshYamlEditor()},userScript(e,t){const s=this.hasInstallAgent(e,this.osType,this.installAgent);s!==this.installAgent&&(this.deleteAgent=!1,this.installAgent=s)},sshKey(e,t){const s=u()(t,e);s.length&&this.isEdit&&this.deleteSSHFromUserData(s)}}}}}]);
//# sourceMappingURL=harvester-1.0.1.umd.min.565.js.map